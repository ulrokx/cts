export enum TokenType {
  LEFT_PAREN = 'LEFT_PAREN',
  RIGHT_PAREN = 'RIGHT_PAREN',
  LEFT_BRACE = 'LEFT_BRACE',
  RIGHT_BRACE = 'RIGHT_BRACE',
  SEMICOLON = 'SEMICOLON',
  EQUAL = 'EQUAL',
  PLUS = 'PLUS',
  MINUS = 'MINUS',
  SLASH = 'SLASH',
  ASTERISK = 'ASTERISK',
  LESS_THAN = 'LESS_THAN',
  GREATER_THAN = 'GREATER_THAN',
  VOID = 'VOID',
  CHAR = 'CHAR',
  INT = 'INT',
  FLOAT = 'FLOAT',
  DOUBLE = 'DOUBLE',
  RETURN = 'RETURN',
  IDENTIFIER = 'IDENTIFIER',
  STRING_LITERAL = 'STRING_LITERAL',
  INT_LITERAL = 'INT_LITERAL',
  FLOAT_LITERAL = 'FLOAT_LITERAL',
  PPD_INCLUDE = 'PPD_INCLUDE',
  PPD_DEFINE = 'PPD_DEFINE',
}

export const charToToken: Record<string, TokenType> = {
  '(': TokenType.LEFT_PAREN,
  ')': TokenType.RIGHT_PAREN,
  '{': TokenType.LEFT_BRACE,
  '}': TokenType.RIGHT_BRACE,
  ';': TokenType.SEMICOLON,
  '=': TokenType.EQUAL,
  '<': TokenType.LESS_THAN,
  '>': TokenType.GREATER_THAN,
  '+': TokenType.PLUS,
  '-': TokenType.MINUS,
  '/': TokenType.SLASH,
  '*': TokenType.ASTERISK,
}

export const stringToKeyword: Record<string, TokenType> = {
  'void': TokenType.VOID,
  'char': TokenType.CHAR,
  'int': TokenType.INT,
  'double': TokenType.DOUBLE,
  'float': TokenType.FLOAT,
  'return': TokenType.RETURN
}